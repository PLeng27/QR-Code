<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>QR Code Generator with Download</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: sans-serif;
    }

    body {
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background: #dcdcdc;
    }

    .container {
      background: #fff;
      padding: 25px 30px;
      border-radius: 10px;
      width: 360px;
      text-align: center;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    h2 {
      margin-bottom: 15px;
      color: #333;
    }

    input[type="text"],
    input[type="number"],
    input[type="file"] {
      width: 100%;
      height: 45px;
      margin: 8px 0;
      padding: 10px;
      border: 1px solid #494eea;
      border-radius: 5px;
      outline: none;
    }

    button {
      width: 100%;
      height: 45px;
      margin-top: 10px;
      background: #494eea;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-weight: bold;
      transition: 0.3s;
    }

    button:hover {
      background: #373ce0;
    }

    #downloadBtn {
      background: #2ecc71;
      display: none;
    }

    #downloadBtn:hover {
      background: #27ae60;
    }

    .qr-box {
      position: relative;
      display: inline-block;
      margin-top: 20px;
    }

    .qr-box img.qr {
      width: 250px;
      height: 250px;
      border-radius: 10px;
    }

    .qr-box .icon-bg {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: white;
      border-radius: 10px;
      z-index: 1;
      display: none;
    }

    .qr-box img.icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border-radius: 10px;
      object-fit: cover;
      z-index: 2;
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>QR Code Generator</h2>
    <input type="text" id="qrText" placeholder="Enter text or URL" />
    <input type="number" id="iconSize" placeholder="Icon size (px)" value="90" min="10" max="200" />
    <input type="number" id="bgPadding" placeholder="Icon background padding (px)" value="1" min="0" max="20" />
    <input type="file" id="iconFile" accept="image/*" />
    <button onclick="generateQR()">Generate QR Code</button>
    <button id="downloadBtn" onclick="downloadQR()">Download QR Code</button>

    <div class="qr-box" id="qrBox" style="display:none;">
      <img id="qrImage" class="qr" src="" alt="QR Code" />
      <div id="iconBg" class="icon-bg"></div>
      <img id="iconImage" class="icon" src="" alt="Icon" />
    </div>
  </div>

  <script>
    let generatedQR = false;
    let cachedIconData = null; // store uploaded icon

    function generateQR() {
      const text = document.getElementById('qrText').value.trim();
      const iconFile = document.getElementById('iconFile').files[0];
      const iconSize = Math.max(10, parseInt(document.getElementById('iconSize').value) || 90);
      const bgPadding = Math.max(0, parseInt(document.getElementById('bgPadding').value) || 1);

      const qrImage = document.getElementById('qrImage');
      const iconImage = document.getElementById('iconImage');
      const iconBg = document.getElementById('iconBg');
      const qrBox = document.getElementById('qrBox');
      const downloadBtn = document.getElementById('downloadBtn');

      if (!text) {
        alert('Please enter text or URL');
        return;
      }

      // Generate high-quality QR (500x500)
      qrImage.src = `https://api.qrserver.com/v1/create-qr-code/?size=500x500&ecc=H&data=${encodeURIComponent(text)}`;
      qrBox.style.display = 'inline-block';

      iconBg.style.width = iconSize + bgPadding + 'px';
      iconBg.style.height = iconSize + bgPadding + 'px';
      iconBg.style.display = 'block';

      if (iconFile) {
        const reader = new FileReader();
        reader.onload = function (e) {
          cachedIconData = e.target.result;
          iconImage.src = cachedIconData;
          iconImage.style.width = iconSize + 'px';
          iconImage.style.height = iconSize + 'px';
          iconImage.style.display = 'block';
          generatedQR = true;
          downloadBtn.style.display = 'block';
        };
        reader.readAsDataURL(iconFile);
      } else {
        cachedIconData = null;
        iconImage.style.display = 'none';
        iconBg.style.display = 'none';
        generatedQR = true;
        downloadBtn.style.display = 'block';
      }
    }

    function downloadQR() {
      if (!generatedQR) return alert('Please generate a QR code first.');

      const qrImage = document.getElementById('qrImage');
      const iconSize = parseInt(document.getElementById('iconSize').value) || 90;
      const bgPadding = parseInt(document.getElementById('bgPadding').value) || 1;

      const canvas = document.createElement('canvas');
      const size = 800; // larger canvas for clearer export
      canvas.width = size;
      canvas.height = size;
      const ctx = canvas.getContext('2d');

      const qr = new Image();
      qr.crossOrigin = 'anonymous';
      qr.src = qrImage.src;

      const downloadIconScale = 3; // make icon 20% bigger when downloaded

      qr.onload = () => {
        ctx.drawImage(qr, 0, 0, size, size);

        // Draw white background patch
        const centerX = size / 2;
        const centerY = size / 2;
        const bgSize = (iconSize * downloadIconScale) + bgPadding * 2;
        ctx.fillStyle = 'white';
        ctx.fillRect(centerX - bgSize / 2, centerY - bgSize / 2, bgSize, bgSize);

        // Draw icon if available
        if (cachedIconData) {
          const icon = new Image();
          icon.src = cachedIconData;
          icon.onload = () => {
            ctx.drawImage(
              icon,
              centerX - (iconSize * downloadIconScale) / 2,
              centerY - (iconSize * downloadIconScale) / 2,
              iconSize * downloadIconScale,
              iconSize * downloadIconScale
            );
            saveCanvas(canvas);
          };
        } else {
          saveCanvas(canvas);
        }
      };
    }

    function saveCanvas(canvas) {
      const link = document.createElement('a');
      link.download = `qr_code_${Date.now()}.png`;
      link.href = canvas.toDataURL('image/png', 1.0);
      link.click();
    }
  </script>
</body>
</html>

